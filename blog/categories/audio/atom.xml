<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Audio | Ramon Huidobro]]></title>
  <link href="http://ramonh.github.io/blog/categories/audio/atom.xml" rel="self"/>
  <link href="http://ramonh.github.io/"/>
  <updated>2014-11-21T18:11:10+01:00</updated>
  <id>http://ramonh.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Homesick App - Playing Stored Audio Data on Android]]></title>
    <link href="http://ramonh.github.io/blog/2014/11/07/homesick-app-playing-stored-audio-data-on-android/"/>
    <updated>2014-11-07T09:29:21+01:00</updated>
    <id>http://ramonh.github.io/blog/2014/11/07/homesick-app-playing-stored-audio-data-on-android</id>
    <content type="html"><![CDATA[<p>This is part of an ongoing series of posts about Homesick, <a href="/blog/2014/11/02/starting-out-with-homesick/">my bachelor project</a>.</p>

<p>The Android side of the client is hosted <a href="https://github.com/ramonh/homesick-app">here</a>.</p>

<p>Last post, I set up a button in my app to record and store audio. This time, I&rsquo;ve set up a play button that will play the audio I recorded.</p>

<p>Once again, the official <a href="http://developer.android.com/guide/topics/media/audio-capture.html">API guides from Google</a> were very helpful.</p>

<p>The code is very similar to that of recording audio, from last post:</p>

<pre><code class="java RecordingActivity.java https://github.com/ramonh/homesick-app/blob/master/app/src/main/java/com/ramonh/homesick/RecordingActivity.java Source">    private void startPlaying() {
        mPlayer = new MediaPlayer();
        try {
            mPlayer.setDataSource(mFileName);
            mPlayer.prepare();
            mPlayer.start();
        } catch (IOException e) {
            Log.e(LOG_TAG, "prepare() failed");
        }
    }
</code></pre>

<p>First, we instantiate an object of type android.media.MediaPlayer. This object will be in charge of playing audio we&rsquo;ve recorded. In the next line, its data source is set to the audio file at the path we recorded to. This means that the player will play this file.</p>

<p>Finally, it&rsquo;s prepared to start playing and start() is called on it to start playing. Simple!</p>

<p>Pressing the Play button again will stop:</p>

<pre><code class="java RecordingActivity.java https://github.com/ramonh/homesick-app/blob/master/app/src/main/java/com/ramonh/homesick/RecordingActivity.java Source">    private void stopPlaying() {
        mPlayer.release();
        mPlayer = null;
    }
</code></pre>

<p>That&rsquo;s it! Now I have a simple prototype that records and plays audio on Android.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Homesick App - Recording and Storing Audio on Android]]></title>
    <link href="http://ramonh.github.io/blog/2014/11/05/homesick-app-recording-and-storing-audio-on-android/"/>
    <updated>2014-11-05T16:58:48+01:00</updated>
    <id>http://ramonh.github.io/blog/2014/11/05/homesick-app-recording-and-storing-audio-on-android</id>
    <content type="html"><![CDATA[<p>This is part of an ongoing series of posts about Homesick, <a href="/blog/2014/11/02/starting-out-with-homesick/">my bachelor project</a>.</p>

<p>The Android side of the client is hosted <a href="https://github.com/ramonh/homesick-app">here</a>.</p>

<p>I&rsquo;ve had a small handful of experience in Android development, so I&rsquo;ve drawn up a simple activity with two buttons for the time being:</p>

<!-- more -->


<p><img src="/images/recording-test.png" title="&lsquo;Recording Test&rsquo;" ></p>

<p>Really, truly barebones. :-)</p>

<p>To get going with recording audio, the official <a href="http://developer.android.com/guide/topics/media/audio-capture.html">API guides from Google</a> were very helpful.</p>

<p>First off, I had to add the microphone and storage permissions to the manifest:
<figure class='code'><figcaption><span>AndroidManifest.xml <a href="https://github.com/ramonh/homesick-app/blob/master/app/src/main/AndroidManifest.xml">https://github.com/ramonh/homesick-app/blob/master/app/src/main/AndroidManifest.xml</a> Source</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="ni">&amp;lt;</span>?xml version=<span class="ni">&amp;ldquo;</span>1.0<span class="ni">&amp;rdquo;</span> encoding=<span class="ni">&amp;ldquo;</span>utf-8<span class="ni">&amp;rdquo;</span>?&gt;
</span><span class='line'><span class="nt">&lt;manifest</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">package=</span><span class="s">&quot;com.ramonh.homesick&quot;</span> <span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>!-- application content --<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>uses-permission android:name=&quot;android.permission.RECORD_AUDIO&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/manifest&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>When the activity is initialized, it sets up the destination of the recorded audio file on a local variable:</p>

<pre><code class="java RecordingActivity.java https://github.com/ramonh/homesick-app/blob/master/app/src/main/java/com/ramonh/homesick/RecordingActivity.java Source">
    public RecordingActivity() {
        mFileName = Environment.getExternalStorageDirectory().getAbsolutePath();
        mFileName += "/audiorecordtest.3gp";
    }
</code></pre>

<p>The above gets the location of external storage on the device and then appends the file name. In this case, the example uses &lsquo;audiorecordtest.3gp.&rsquo;</p>

<p>It then hooks up the buttons to the activity and when the record button is pressed, the following is called:</p>

<pre><code class="java RecordingActivity.java https://github.com/ramonh/homesick-app/blob/master/app/src/main/java/com/ramonh/homesick/RecordingActivity.java Source">    private void startRecording() {
        mRecorder = new MediaRecorder();
        mRecorder.reset();
        mRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
        mRecorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);
        mRecorder.setOutputFile(mFileName);
        mRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);

        try {
            mRecorder.prepare();
        } catch (IOException e) {
            Log.e(LOG_TAG, "prepare() failed");
        }

        mRecorder.start();
    }
</code></pre>

<p>On line 2, we set our local mRecorder to be a new instance of android.media.MediaRecorder. On line 4, we set the audio source to be the device&rsquo;s microphone. On line 5, we set the format to be 3gp. On line 6, we set the destination to be file path we specified earlier. Then, the Audio Encoder is set. Choices can be found <a href="http://developer.android.com/reference/android/media/MediaRecorder.AudioEncoder.html">here</a>.</p>

<p>Finally, we call prepare() on it to finalize the recorder object&rsquo;s settings. Once that succeeds, we call start() to begin the recording process.</p>

<p>Stopping is a much simpler process:</p>

<pre><code class="java RecordingActivity.java https://github.com/ramonh/homesick-app/blob/master/app/src/main/java/com/ramonh/homesick/RecordingActivity.java Source">    private void stopRecording() {
        mRecorder.stop();
        mRecorder.release();
        mRecorder = null;
    }
</code></pre>

<p>And that&rsquo;s it! With this all set up, the app can record audio and store it in the 3gp file format on the device&rsquo;s external storage.</p>

<p>Next up, that play button&hellip;</p>
]]></content>
  </entry>
  
</feed>
