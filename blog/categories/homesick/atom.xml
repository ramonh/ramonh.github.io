<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Homesick | Ramón Huidobro]]></title>
  <link href="http://ramonh.github.io/blog/categories/homesick/atom.xml" rel="self"/>
  <link href="http://ramonh.github.io/"/>
  <updated>2014-12-18T13:06:15+01:00</updated>
  <id>http://ramonh.github.io/</id>
  <author>
    <name><![CDATA[Ramón Huidobro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Homesick App - Setting Up a CoffeeScript-written Node.js Project]]></title>
    <link href="http://ramonh.github.io/blog/2014/11/10/homesick-app-setting-up-a-coffeescript-written-node-dot-js-project/"/>
    <updated>2014-11-10T13:38:22+01:00</updated>
    <id>http://ramonh.github.io/blog/2014/11/10/homesick-app-setting-up-a-coffeescript-written-node-dot-js-project</id>
    <content type="html"><![CDATA[<p>This is part of an ongoing series of posts about Homesick, <a href="/blog/2014/11/02/starting-out-with-homesick/">my bachelor project</a>.</p>

<p>The server side is hosted <a href="https://github.com/ramonh/homesick-server">here</a>.</p>

<p>This is a great opportunity for me to learn both Node.js and get acquainted with server-side programming.</p>

<p>Having said that, I realize that using Node.js might be overkill for something that could be solved with a more low-level approach, but I want to learn Node.js, simple as that!</p>

<p>In order to install Node, you can either download an installer from their <a href="http://nodejs.org/">website</a> or install it using your favorite package manager. Myself, I used <a href="http://brew.sh/">Homebrew</a> on OS X with the command <em>$ brew install node</em>.</p>

<p>I also opted for writing CoffeeScript because I find it a lot of fun! If you don&rsquo;t know what CoffeeScript is, it&rsquo;s a language that compiles into JavaScript. Be sure to <a href="http://coffeescript.org/">try it out here!</a>. You can use the NPM (Node Package Manager) that comes bundled with Node to install CoffeeScript using the command <em>$ npm install coffee-script</em>.</p>

<p>As a part of my toolchain, I&rsquo;m personally a huge fan of <a href="https://github.com/jimweirich/rake">rake</a> for setting up tasks.</p>

<p>Here&rsquo;s the tasks I have set up at the moment:</p>

<pre><code class="ruby RakeFile https://github.com/ramonh/homesick-server/blob/master/Rakefile Source">
task :coffee do
  puts 'CoffeeScript compiled!' if system 'coffee -c -o js coffee'
end

task :run =&gt; [:coffee] do
  puts 'Starting server'
  system 'node js/app.js'
end
</code></pre>

<p>Short and sweet. The first tasks just prints &ldquo;CoffeeScript compiled!&rdquo; if the command to compile is successful. The way the <em>coffee</em> command works is it looks at the <em>.coffee</em> files in the coffee folder, and compiles them into the <em>js</em> folder.</p>

<p>What the <em>run</em> task does is it requires the <em>coffee</em> task, that is, it makes sure that the task has been run, and then starts the server with the <em>node</em> command. This takes the compiled <em>app</em> JavaScript file and runs it.</p>

<p>If you&rsquo;d like to get furher into rake, I highly recommend watching the <a href="https://www.youtube.com/watch?v=AFPWDzHWjEY">rake</a> <a href="https://www.youtube.com/watch?v=KaEqZtulOus">talks</a> by rake&rsquo;s creator, the late Jim Weirich. Or really, any talks he gave. They&rsquo;re all wonderful.</p>
]]></content>
  </entry>
  
</feed>
