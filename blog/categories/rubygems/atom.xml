<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rubygems | Ramón Huidobro]]></title>
  <link href="http://ramonh.github.io/blog/categories/rubygems/atom.xml" rel="self"/>
  <link href="http://ramonh.github.io/"/>
  <updated>2015-01-08T15:27:48+01:00</updated>
  <id>http://ramonh.github.io/</id>
  <author>
    <name><![CDATA[Ramón Huidobro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Internationalization in RubyMotion Projects - Part 2]]></title>
    <link href="http://ramonh.github.io/blog/2015/01/03/internationalization-in-rubymotion-projects-part-2/"/>
    <updated>2015-01-03T13:32:31+01:00</updated>
    <id>http://ramonh.github.io/blog/2015/01/03/internationalization-in-rubymotion-projects-part-2</id>
    <content type="html"><![CDATA[<p>Over the holidays, I pondered on how I could make these scripts for slurping up localizable strings in RubyMotion projects easier for myself or other developers.</p>

<p>I then came up with the idea to make this a ruby gem! Introducing <a href="https://github.com/incbee/locamotion">LocaMotion</a>.</p>

<p>It currently has two commands: &lsquo;slurp&rsquo; and &lsquo;generate&rsquo;</p>

<p>Let&rsquo;s start with the one you might already be familiar with: calling &lsquo;locamotion generate&rsquo; from the command line will run the script from <a href="blog/2014/12/03/internationalization-in-rubymotion-projects/">last post</a>. That is, it looks at the strings in the English localizable file and copies them into those of the other languages, should these not already contain said string.</p>

<p>The second command is called &lsquo;locamotion slurp&rsquo;. What this does is it looks into the <em>app</em> folder of a RubyMotion project and extracts every localized string in the SugarCube format. That is, for example:</p>

<p>&ldquo;Hello&rdquo;._</p>

<p>Once locamotion finishes gathering up the localizable strings, it looks in the &lsquo;resources/en.lproj/Localizable.strings&rsquo; file, and adds each string if it doesn&rsquo;t exist yet in the localizable file. The script is as follows</p>

<pre><code class="ruby Slurp">matches = []
Dir.glob('app/**/*.rb') do |ruby_file|
  File.open(ruby_file).each do |line|
    matches += line.scan(/"([^"]+)"\._/)
    matches += line.scan(/'([^']+)'\._/)
  end
end
matches.flatten!
FileUtils.mkdir_p('resources/en.lproj') unless File.exist?('resources/en.lproj')
localizable = 'resources/en.lproj/Localizable.strings'
system("touch #{localizable}")
strings_added_count = 0
matches.each do |string|
  unless File.open(localizable).read =~ /"#{Regexp.quote(string)}"\s*=\s*"#{Regexp.quote(string)}";/
  File.open(localizable, 'a+') { |f| f.write("\"#{string}\" = \"#{string}\";\n") }
    added = true
  end
end
</code></pre>

<p>These two commands make setting myself up for localizing the strings in my RubyMotion apps a lot faster.</p>

<p>Creating the LocaMotion gem was also quite the learning experience! But that&rsquo;s for another blog post. &lsquo;Til then!</p>
]]></content>
  </entry>
  
</feed>
